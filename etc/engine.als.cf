{
    // global conf shared by all projects
    cpu_num:   "auto"
    diagnostic_interval: 30
    http_addr: "127.0.0.1:9876"
    
    projects: [
        {
            name:   "als"
            comment:"als server monitor"
        }
        {
            name:   "RS"
            show_error: true
            alarm_email: {
                recipients:   "peng.gao@funplusgame.com,zhengkai@gmail.com,yan.zhang@funplusgame.com"
                busy_line_threshold: 25
                line_threshold: 10
                sleep_start:    600
                sleep_step:     60
                sleep_max:      1600
                sleep_min:      250
            }
            logfile: "var/rs.log"    
            index_prefix: "rs"      
        }
        {
            name:   "FFS"
            show_error: true
            logfile: "var/ffs.log" 
            index_prefix: "ffs"   
        }
        {
            name:   "FF2"
            show_error: true
            logfile: "var/ff2.log" 
            index_prefix: "ff2"   
        }
        {
            name:   "FF"
            show_error: true
            logfile: "var/ff.log" 
            index_prefix: "ff"   
        }
    ]

    plugins: [
        {
            name:   "SelfSysInput"
            ident:   "alsSysStat"
            ticker_interval: 10
        }

        {
            name:   "AlsLogInput"
            show_pregress: true
            ticker_interval: 30
            poll_interval_ms: 250
            projects: [
                {
                    name: "FFS"
                    sources: [
                        {
                            glob: "/mnt/funplus/logs/fp_ffseaside/bi_*.log"
                            ident: "ffsBi"
                        }
                    ]
                }

                {
                    name: "RS"
                    sources: [
                        {
                            ident: "rsMongoError"
                            glob: "/mnt/funplus/logs/fp_rstory/mongo_err*.log"
                        }
                        {
                            ident: "rsDau"
                            glob: "/mnt/funplus/logs/fp_rstory/dau*.log"
                        }
                        {
                            ident: "rsLogs"
                            glob: "/mnt/funplus/logs/fp_rstory/*.log"
                            ignores: [
                                "post", "index", "session", "load_data", "dau", "pv",
                                "cheat_check", "quest", "bigdata.",
                            ]
                        }
                    ]
                }
            ]

        }

        {
            name:   "CardinalityFilter"
            match:  ["rsDau", ]
            ident:   "rsDauCardinal"
            converts: [
                {
                    log_prefix: "dau"
                    project:    "RS"
                    fields: [
                        {
                            key:   "uid"
                            type:  "int"
                            interval: [
                                "week", "month",
                            ]
                        }
                        {
                            key:   "ip"
                            type:  "string"
                            interval: [
                                "week", "month",
                            ]
                        }
                    ]
                }
            ]
        }
        
        {
            name:   "CardinalityOutput"
            checkpoint: "var/rsCard.gob"
            match:  ["rsDauCardinal", ]
        }

        {
            name:   "EsBufferFilter"
            match:  ["rsPv", ]
            ident:   "esBuffer"
            disabled: false
            workers: [
                {
                    camel_name: "dau"
                    project:    "RS"
                    index_pattern:  "@ym"
                    expression: "count"
                    interval:   5
                }
                {
                    camel_name: "pv"
                    project:    "RS"
                    index_pattern:  "@ym"
                    field_name: "_log_info.elapsed"
                    field_type: "float"
                    expression: "mean"
                    interval:   5
                }
                {
                    camel_name: "pv"
                    project:    "RS"
                    index_pattern:  "@ym"
                    expression: "count"
                    interval:   5
                }
            ]
        }

        {
            name:   "EsFilter"
            geodbfile: "/opt/local/share/GeoIP/GeoIP.dat"
            match:  ["rsDau", "ffsBi", "rsLogs", "rsMongoError", ]
            ident:   "esFiltered"
            index_pattern:  "@ym"
            converts: [
                // type: ip|money|range|del
                {
                    keys: ["ip", "_log_info.ip", ]
                    type: "ip"
                }
                {
                    keys: ["trace", ]
                    type: "del"
                }
                {
                    keys: ["data.amount", ]
                    type: "money"
                    currency: "data.currency"
                }
                {
                    keys: ["level", "lv", "_log_info.level", ]
                    type: "range"
                    range: [1, 14, 19, 23, 27, 31, 36, 41, 46, 51, 57, 63, 69, 75, 101]
                }
            ]
        }

        {
            name:   "EsOutput"
            match:  ["esFiltered", "alsSysStat", "esBuffer"]
            dryrun: false
            show_progress: true
            report_interval: 60
            domain: "localhost"
            port: "9200"
            flush_interval: 30
            bulk_max_conn: 20
            bulk_max_docs: 100
        }

        {
            name:   "AlarmOutput"
            match:  ["rsLogs", "rsMongoError", ]
            projects: [
                {
                    name:   "RS"
                    workers: [
                        {
                            title:  "MongoError"
                            camel_name: "rsMongoError"
                            colors: [ "FgCyan", "Bright", "BgRed", ]
                            dbname:         "mongoError"
                            window_size:    15
                            beep_threshold: 1
                            abnormal_base:  1
                            abnormal_percent: 0.5
                            create_table:   "CREATE TABLE IF NOT EXISTS %s (area CHAR(10), ts INT, msg VARCHAR(200));"
                            insert_stmt:    "INSERT INTO %s(area, ts, msg) VALUES(?,?,?)"
                            stats_stmt:     "SELECT COUNT(*) AS c, area, msg FROM %s where ts<=? GROUP BY area, msg ORDER BY c DESC"
                            printf:         "%5d %3s %s"
                            iprintf:        "MongoError %3s %s"
                            fields: [
                                {
                                    name: "message"
                                }
                            ]
                        }

                        {
                            title:  "BizError"
                            camel_name: "error"
                            colors: [ "FgRed", ]
                            dbname:         "error"
                            window_size:    587
                            beep_threshold: 10
                            abnormal_base:  5
                            abnormal_percent: 0.8
                            create_table:   "CREATE TABLE IF NOT EXISTS %s (area CHAR(10), ts INT, cls VARCHAR(50), msg VARCHAR(200));"
                            insert_stmt:    "INSERT INTO %s(area, ts, cls, msg) VALUES(?,?,?,?)"
                            stats_stmt:     "SELECT COUNT(*) AS c, area, cls, msg FROM %s where ts<=? GROUP BY area, cls, msg HAVING c>1 ORDER BY c DESC"
                            printf:         "%5d %3s %20s %s"
                            fields: [
                                {
                                    name: "class"
                                }
                                {
                                    name: "message"
                                    normalizers: ["digit", "batch_token", ]
                                    ignores: [
                                        "Energy Error, Client: ?, Server: ?, info:batch",
                                        "batch token error",
                                        "Sorry, someone has logged",
                                        "cost is not enough",
                                        "payment error: OK",
                                        "new pay : OK",
                                        "new pay : start",
                                        "XP Error, Client",
                                        "time error",
                                        "snsid or uid error",
                                        "key error",
                                    ]
                                }
                            ]
                        }

                        {
                            title:  "PhpError"
                            camel_name: "phperror"
                            colors: [ "FgYellow", "Bright", ]
                            dbname:         "phperror"
                            window_size:    99
                            beep_threshold: 1
                            abnormal_base:  5
                            abnormal_percent: 0.8
                            create_table:   "CREATE TABLE IF NOT EXISTS %s (area CHAR(10), ts INT, host VARCHAR(50), msg VARCHAR(200));"
                            insert_stmt:    "INSERT INTO %s(area, ts, host, msg) VALUES(?,?,?,?)"
                            stats_stmt:     "SELECT COUNT(*) AS c, area, host, msg FROM %s where ts<=? GROUP BY area, host, msg ORDER BY c DESC"
                            printf:         "%5d %3s %15s %s"
                            iprintf:        "%3s %15s %s"
                            fields: [
                                {name: "host"}
                                {name: "msg"}
                            ]
                        }

                        {
                            title: "Kernal"
                            camel_name: "kernal"
                            colors: ["FgWhite", "Reverse", ]
                            dbname:         "kernal"
                            window_size:    1715
                            beep_threshold: 1
                            abnormal_base:  5
                            abnormal_percent: 0.8
                            create_table:   "CREATE TABLE IF NOT EXISTS %s (area CHAR(10), ts INT, host VARCHAR(50), msg VARCHAR(200));"
                            insert_stmt:    "INSERT INTO %s(area, ts, host, msg) VALUES(?,?,?,?)"
                            stats_stmt:     "SELECT COUNT(*) AS c, area, host, msg FROM %s where ts<=? GROUP BY area, host, msg ORDER BY c DESC"
                            printf:         "%5d %3s %15s %s"
                            iprintf:        "%3s %15s %s"
                            fields: [
                                {name: "host"}
                                {
                                    name: "msg"
                                    ignores: [
                                        "regex: child \\d+ started",
                                        "regex: child \\d+ exited with code 0",
                                        "regex: spawning \\d+ children",
                                        "Log statistics",
                                        "you may need to increase start_servers",
                                        "dhclient: bound to",
                                        "dhclient: DHCPREQUEST",
                                        "dhclient: DHCPACK",
                                        "Undefined property: MapModel",
                                    ]
                                }
                            ]
                        }

                        {
                            title: "MongoSlow"
                            camel_name: "mongoSlow"
                            colors: [ "FgYellow", "Reverse", ]
                            dbname:         "mongoSlow"
                            window_size:    393
                            beep_threshold: 1
                            abnormal_base:  2
                            abnormal_percent: 0.8
                            create_table:   "CREATE TABLE IF NOT EXISTS %s (area CHAR(10), ts INT, tbl VARCHAR(50), method VARCHAR(30), t FLOAT, host CHAR(30), server CHAR(60));"
                            insert_stmt:    "INSERT INTO %s(area, ts, tbl, method, t, host, server) VALUES(?,?,?,?,?,?,?)"
                            stats_stmt:     "SELECT COUNT(*) AS c, area, method, tbl FROM %s WHERE ts<=? GROUP BY area, method, tbl ORDER BY c DESC"
                            printf:         "%5d %3s %12s %18s"
                            iprintf:        "MongoSlow %3s %15s %8s %8.4f %15s %s"
                            fields: [
                                { name: "table" }
                                { name: "method" }
                                {
                                    name: "ts"
                                    type: "float"
                                }
                                { name: "_log_info.host" }
                                { name: "server" }
                            ]
                        }

                        {
                            title: "MemcacheSlow"
                            camel_name: "memcacheTo"
                            colors: [ "FgYellow", ]
                            window_size:    0
                            iprintf:        "CacheSlow %3s %20s %8.4f %15s"
                            fields: [
                                {
                                    name: "key"
                                    normalizers: ["digit", ]
                                }
                                {
                                    name: "ts"
                                    type: "float"
                                }
                                { name: "_log_info.host"}
                            ]
                        }

                        {
                            title: "SlowResponse"
                            camel_name: "slowresponse"
                            colors: [ "FgMagenta", "Bright", ]
                            dbname:         "slowresp"
                            window_size:    523
                            beep_threshold: 1
                            abnormal_base:  10
                            abnormal_percent: 0.6
                            create_table:   "CREATE TABLE IF NOT EXISTS %s (area CHAR(10), ts INT, uri VARCHAR(200));"
                            insert_stmt:    "INSERT INTO %s(area, ts, uri) VALUES(?,?,?)"
                            stats_stmt:     "SELECT COUNT(*) AS c, area, uri FROM %s where ts<=? GROUP BY area, uri ORDER BY c DESC"
                            printf:         "%5d %3s %s"
                            fields: [
                                {name: "_log_info.uri"}
                            ]
                        }

                    ]
                }

            ]
        }

        {
            name:   "rsSkyOutput"
            class:  "SkyOutput"
            match:  ["rsClick", ]
            disabled: true
            project:    "RS"
            table:      "rs_click"
            uid_field:  "uid"
        }

    ]

}
